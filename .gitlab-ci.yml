include:
  - project: accessable-net/gitlab-ci-templates
    file: scheduled_rebase.yml
  - project: accessable-net/gitlab-ci-templates
    file: android-set-version-ci.yml

.checkout-deagle: &checkout_deagle
  - git clone https://github.com/oasisfeng/deagle ../deagle -b dev

.checkout-setupwizard: &checkout_setupwizard
  - git clone
    https://android.googlesource.com/platform/frameworks/opt/setupwizard
    ../setup-wizard

.only-release: &only-release
  only:
    - master
    - tags

variables:
  UPSTREAM_BRANCH: dev
  VERSION_BUILD_GRADLE_LOCATION: assembly/build.gradle
  VERSION_ANDROID_MANIFEST_LOCATION: assembly/src/main/AndroidManifest.xml
  VERSION_CHANGELOG_DIR_LOCATION: fastlane/metadata/android/en-US/changelogs

stages:
  - environment
  - build
  - test
  - deploy
  - internal
  - alpha
  - beta
  - production

.build_job:
  image: circleci/android:api-30
  stage: build
  before_script:
    - base64 -d $KEYSTORE_FILE > android-signing-keystore.jks
    # Prepare dependencies
    - bundle config set path 'vendor/bundle'
    - bundle install -j $(nproc)
    - *checkout_deagle
    - *checkout_setupwizard
  after_script:
    - rm -f android-signing-keystore.jks || true
  artifacts:
    paths:
      - assembly/build/outputs
  cache:
    paths:
      - .gradle
      - vendor/bundle

buildFdroidDebugApk:
  extends: .build_job
  script:
    - bundle exec fastlane buildFdroidDebugApk

# Generate Apk for direct use
buildFdroidReleaseApk:
  <<: *only-release
  extends: .build_job
  script:
    - bundle exec fastlane buildFdroidReleaseApk
  environment:
    name: production

buildFdroidReleaseBundle:
  <<: *only-release
  extends: .build_job
  script:
    - bundle exec fastlane buildFdroidReleaseBundle
  environment:
    name: production

testFdroidDebug:
  allow_failure: true
  image: circleci/android:api-30
  stage: test
  dependencies:
    - buildFdroidDebugApk
  before_script:
    # Prepare dependencies
    - bundle config set path 'vendor/bundle'
    - bundle install -j $(nproc)
    - *checkout_deagle
    - *checkout_setupwizard
  script:
    - bundle exec fastlane test
  cache:
    paths:
      - .gradle
      - vendor/bundle

publishInternal:
  <<: *only-release
  environment:
    name: production
  image: ruby:alpine
  stage: internal
  dependencies:
    - buildFdroidReleaseBundle
  when: manual
  before_script:
    - mv $google_play_service_account_api_key_json ~/.google-play.json
    - apk add build-base
    # Install fastlane etc.
    - bundle config set path 'vendor/bundle'
    - bundle install -j $(nproc)
  after_script:
    - rm ~/.google-play.json
  script:
    - bundle exec fastlane internal
  cache:
    paths:
      - .gradle
      - vendor/bundle
  only:
    - tags

.promote_job:
  <<: *only-release
  environment:
    name: production
  image: ruby:alpine
  when: manual
  dependencies: []
  before_script:
    - mv $google_play_service_account_api_key_json ~/.google-play.json
    - apk add build-base
    - 'export VERSION_CODE=$CI_PIPELINE_IID && echo $VERSION_CODE'
    # Install fastlane etc.
    - bundle config set path 'vendor/bundle'
    - bundle install -j $(nproc)
  after_script:
    - rm ~/google-play.json
  cache:
    paths:
      - .gradle
      - vendor/bundle
  only:
    - tags

promoteAlpha:
  extends: .promote_job
  stage: alpha
  script:
    - bundle exec fastlane promote_internal_to_alpha version_code:$VERSION_CODE

promoteBeta:
  extends: .promote_job
  stage: beta
  script:
    - bundle exec fastlane promote_alpha_to_beta version_code:$VERSION_CODE

promoteProduction:
  environment:
    name: production
  extends: .promote_job
  stage: production
  # We only allow production promotion on `master` because
  # it has its own production scoped secret variables
  only:
    - master
  script:
    - bundle exec fastlane promote_beta_to_production version_code:$VERSION_CODE
