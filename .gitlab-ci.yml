include:
  - project: accessable-net/gitlab-ci-templates
    file: scheduled_rebase.yml

.checkout-deagle: &checkout_deagle
  - git clone https://github.com/oasisfeng/deagle ../deagle -b dev

.checkout-setupwizard: &checkout_setupwizard
  - git clone https://android.googlesource.com/platform/frameworks/opt/setupwizard ../setup-wizard

variables:
  UPSTREAM_BRANCH: dev

stages:
  - environment
  - build
  - test
  - deploy
  - internal
  - alpha
  - beta
  - production

.build_job:
  image: circleci/android:api-30
  stage: build
  before_script:
    - base64 -d $KEYSTORE_FILE > android-signing-keystore.jks
    - "export VERSION_CODE=$(expr 45200 + $CI_PIPELINE_IID) && echo $VERSION_CODE"
    - "export VERSION_SHA=`echo ${CI_COMMIT_SHA:0:8}` && echo $VERSION_SHA"
    # Prepare dependencies
    - bundle config set path 'vendor/ruby'
    - bundle install -j $(nproc)
    - *checkout_deagle
    - *checkout_setupwizard
  after_script:
    - rm -f android-signing-keystore.jks || true
  artifacts:
    paths:
      - assembly/build/outputs
  cache:
    paths:
      - .gradle
      - vendor/ruby

buildFdroidDebug:
  extends: .build_job
  script:
    - bundle exec fastlane buildFdroidDebug

buildFdroidRelease:
  extends: .build_job
  script:
    - bundle exec fastlane buildFdroidRelease
  environment:
    name: production

testFdroidDebug:
  image: circleci/android:api-30
  stage: test
  dependencies:
    - buildFdroidDebug
  before_script:
    # Prepare dependencies
    - bundle config set path 'vendor/ruby'
    - bundle install -j $(nproc)
    - *checkout_deagle
    - *checkout_setupwizard
  script:
    - bundle exec fastlane test
  cache:
    paths:
      - .gradle
      - vendor/ruby

publishInternal:
  environment:
    name: Google Play
  image: circleci/android:api-30
  stage: internal
  dependencies:
    - buildFdroidRelease
  when: manual
  before_script:
    - mv $google_play_service_account_api_key_json ~/.google-play.json

    # Install fastlane etc.
    - bundle config set path 'vendor/ruby'
    - bundle install -j $(nproc)
  after_script:
    - rm ~/.google-play.json
  script:
    - bundle exec fastlane internal
  cache:
    paths:
      - .gradle
      - vendor/ruby

.promote_job:
  environment:
    name: Google Play
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  when: manual
  dependencies: []
  before_script:
    - mv $google_play_service_account_api_key_json ~/.google-play.json
    - "export VERSION_CODE=$CI_PIPELINE_IID && echo $VERSION_CODE"
    # Install fastlane etc.
    - bundle config set path 'vendor/ruby'
    - bundle install -j $(nproc)
  after_script:
    - rm ~/google-play.json
  cache:
    paths:
      - .gradle
      - vendor/ruby

promoteAlpha:
  extends: .promote_job
  stage: alpha
  script:
    - bundle exec fastlane promote_internal_to_alpha version_code:$VERSION_CODE

promoteBeta:
  extends: .promote_job
  stage: beta
  script:
    - bundle exec fastlane promote_alpha_to_beta version_code:$VERSION_CODE

promoteProduction:
  environment:
    name: Google Play
  extends: .promote_job
  stage: production
  # We only allow production promotion on `master` because
  # it has its own production scoped secret variables
  only:
    - master
  script:
    - bundle exec fastlane promote_beta_to_production version_code:$VERSION_CODE
